name: Python test

on:
  push:
    branches:
      - main
      - feature/*
    paths:
      - 'file_organizer/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  pull_request:
    branches:
      - main
    paths:
      - 'file_organizer/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Install Dependencies
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install

      - name: Lint with ruff
        run: |
          poetry run ruff --config pyproject.toml .

      - name: Security check with bandit
        run: |
          poetry run bandit -c pyproject.toml -r .

      - name: Type check with mypy
        run: |
          poetry run mypy --config-file pyproject.toml .

      - name: Test with pytest
        run: |
          poetry run pytest
